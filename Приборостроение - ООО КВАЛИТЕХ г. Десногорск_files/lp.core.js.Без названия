var s3LP = {
	init: function(options) {
		if (options){
			this.is_cms = options.is_cms ? true : false;
		}
		this.initForms();

		lp_init($('body'));
		
		if (s3LP.page_blocking) {
			$('html, body').css({
				'overflow': 'hidden',
				'height': '100%'
			});
			$('<div />', {
				'class' : 'page-blocked'
			}).appendTo($('body'));
			
			$('.page-blocked').css({
				'background': 'rgba(0,0,0,.8)',
				'position': 'absolute',
				'left': 0,
				'right': 0,
				'bottom': 0,
				'top': 0,
				'z-index': 100000,
				'color': '#fff',
				'font-size': '28px',
				'display': 'flex',
				'align-items': 'center',
				'flex-direction': 'column',
				'padding': '10px',
				'text-align': 'center',
				'line-height':'1.5',
				'align-items': 'center',
				'justify-content': 'center'
			}).append('<b>Страница заблокирована</b><div style="font-size: 18px;">обратитесь в техническую поддержку</div>');
		}
	},
	initForms: function(parent) {
		var self = this;
		if (!parent) parent = document;
		if (!$(parent).is('[data-api-url][data-api-type=form]')) {
			parent = $(parent).find('[data-api-url][data-api-type=form]');
		}

		$(parent).each(function() {
			var obj = $(this);
			var form = obj.is("form") ? obj : obj.find("form");

			if (self.is_cms) {
				form.attr('title', JS_LP_FORM_NOTE).tooltip();
				form.submit(function() {
					return false;
				});
			} else if (!form.data('anketa2')) {
				form.submit(function(event) {
				
					/*var inputPhone = $(form).find('input[data-validator="phone"]'),
						inputPhonesError = false;
				
					inputPhone.each(function(i){
						if ($(this).val() != '' || $(this).parents('.tpl-field').hasClass('field-required')) {
							var validateField = s3LP.validateFormFields($(this).val(), "phone");
							if (!validateField.valid) {
								inputPhonesError = true;
								$(this).parents('.tpl-field').addClass('field-error');
							}
						}
					});
					
					if (inputPhonesError) {
						return false;
					}*/
					
					$.post(obj.data('api-url'), form.serialize(), function(response) {
						if (response.result.success && response.result.redirect_url) {
							document.location.href = response.result.redirect_url.replace(/&amp;/g, '&');
						} else {
							if (response.result.html) {

								var replacement = $(response.result.html.replace(/[\r\n]/g, '').replace(/<script[^>]*>.*?<\/script>/g, ''));
								
								var uploaders_inits = '';
								var scripts = response.result.html.match(/<script[^>]*>[^<]*newSWFU[^<]*<\/script>/gm);
								if (scripts) {
									for (var i = 0; i < scripts.length; i++) {
										uploaders_inits += scripts[i].replace(/<script[^>]*>([^<]+)<\/script>/, "$1");
									}
								}

								if (!$(replacement).is('[data-api-url][data-api-type=form]')) {
									replacement = $(replacement).find('[data-api-url][data-api-type=form]');
								}
								
								obj.replaceWith(replacement);
								
								if (typeof self.successForm == 'function' && response.result.success) {
									self.successForm();
								}
								
								var inputMask = $('input[data-mask="mask"]');
								if (inputMask.length) {
									$.getScript('/g/libs/jquery-maskedinput/1.3.1//jquery.maskedinput.min.js', function() {
										inputMask.mask("+7 (999) 999-99-99");
									});
								}
								
								var inputDates = $('input[data-calendar="calendar"], input[data-calendar="calendar-interval"]');
								
								if (inputDates.length) {
									$.getScript('/g/s3/lp/js//datepicker.min.js', function() {
										var inputCalender = $('input[data-calendar="calendar"]'),
											inputCalenderInterval = $('input[data-calendar="calendar-interval"]');
											
										if (typeof lp_template.datepicker == 'function') {
											lp_template.datepicker.call(inputCalender)
										}
										
										if (typeof lp_template.datepicker_range == 'function') {
											lp_template.datepicker_range.call(inputCalenderInterval)
										}
									});
								}
								
								var $uploads = obj.find('input[type="hidden"][id^="hidUploadField"]');

								if ($uploads.length) {
									if (typeof window['newSWFU'] !== 'function') {
										$.getScript('/shared/s3/plupload/plupload.all.pack.js', function() {
											inituploaders();
										});
									} else {
										inituploaders();
									}
								}
			
								function inituploaders() {
									if (uploaders_inits) {
										eval(uploaders_inits);
									}
								}
								
								var $captcha = replacement.find('input[name=_cn]');
								if ($captcha.length) {
									$.getScript('http://captcha.oml.ru/static/captcha.js?2', function() {
										var $d = replacement.find("[id^=s3_captcha_cn]");
										mgCaptcha.draw("/my/s3/captcha/get.php", ($d.length ? $d.get(0) : null));
									});
								}
								
								self.initForms(replacement);
							}
						}
					});
					event.preventDefault();
				});
			}
		})
	},
	validateFormFields: function(value, type, options) {
		if (value == undefined) {
			console.log("Error: " + type + " - value is undefined");
			return false;
		}
		
		var settings = options || {
			canBeEmpty: false,
			messages: {
				EMPTY_FIELD: "Заполните поле",
				WRONG_EMAIL: "Некорректный E-mail",
				WRONG_SITE: "Некорректный адрес сайта",
				WRONG_PHONE: "Некорректный номер",
				TOO_SHORT_PHONE: "Короткий номер"
			}
		};

		var reg = null;
		var response = {
			valid: true,
			message: '',
			empty: false
		};
		value = value.trim();
		
		switch (type) {
			case 'phone':
				reg = /^[\+\-\d\s\(\)]+$/i;
				response.message = settings.messages.WRONG_PHONE;
				break;

			case 'email':
				reg = /^.+@.+\..+$/i;
				response.message = settings.messages.WRONG_EMAIL;
				break;
			case 'site':
				reg = /^.+\..{2,}$/i;
				response.message = settings.messages.WRONG_SITE;
				break;
			default:
				reg = /.+/;
				response.message = settings.messages.EMPTY_FIELD;
				break;
		}
		response.empty = (value.length == 0);
		if (response.empty) {
			if (settings.canBeEmpty) {
				response.valid = true;
				return response;
			} else {
				response.valid = false;
				response.message = settings.messages.EMPTY_FIELD;
				return response;
			}
		}

		response.valid = reg.test(value);

		if (!response.valid) {
			return response;
		}	else if (type === 'phone') {
			var tmp = value.match(/\d/g);
			if (!tmp || tmp.length < 7) {           // кол-во цифр в строке.
				response.valid = false;
				response.message = settings.messages.TOO_SHORT_PHONE;
				return response;
			}
		}

		return response;
	}
}